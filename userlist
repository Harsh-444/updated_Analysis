@using DAL.ViewModels
@model List<UsersViewModel>
@{
    ViewData["Title"] = "Userlist";
    var page = ViewBag.page as int? ?? 1;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
    var totalUsers = ViewBag.totalUsers as int? ?? 0;
    var itemsPerPage = ViewBag.itemsPerPage as int? ?? 5;
    var searchTerm = ViewData["SearchTerm"] as string ?? "";
}

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css"
    integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" />

<div class="container-fluid d-flex align-items-center" style="justify-content: space-between;">
    <p class="headings fw-bold" style="font-size: 30px; color: #0066a7;">Users</p>
    <div class="srch">
        <form method="get" action="@Url.Action("Userlist","UserView")">
            <input type="text" class="search-user" name="searchTerm" id="searchTerm" placeholder="Search"
                value="@searchTerm">
            <button value="" class="add-btn"><a asp-action="AddUser" asp-controller="UserView"
                    style="color: white; text-decoration: none;">+ Add
                    User</a></button>
            <input type="hidden" id="sortColumn" value="@ViewBag.SortColumn">
            <input type="hidden" id="sortOrder" value="@ViewBag.SortOrder">
            <input type="hidden" id="itemsPerPageHidden" value="@ViewBag.ItemsPerPage">
        </form>
    </div>
</div>

<div style="background-color: white; box-shadow: 0px 5px 12px #999;">
    <div class="box b1 p-4" style="box-shadow: 0 0 0 white;">
        <table class="table" id="userTable" style="border-top: none;">
            <thead>
                <tr>
                    <th scope="col" class="d-flex">
                        Name
                        <a href="#" class="sort-link" data-sort="Name">
                            <i
                                class="bi bi-arrow-up @(ViewBag.SortColumn == "Name" && ViewBag.SortOrder == "asc" ? "text-primary" : "text-secondary")"></i>
                            <i
                                class="bi bi-arrow-down @(ViewBag.SortColumn == "Name" && ViewBag.SortOrder == "desc" ? "text-primary" : "text-secondary")"></i>
                        </a>
                    </th>

                    <th scope="col" style="border-top: none;">Email</th>
                    <th scope="col" style="border-top: none;">Phone</th>
                    <th scope="col" class="d-flex">
                        Role
                        <a href="#" class="sort-link" data-sort="Role">
                            <i
                                class="bi bi-arrow-up @(ViewBag.SortColumn == "Role" && ViewBag.SortOrder == "asc" ? "text-primary" : "text-secondary")"></i>
                            <i
                                class="bi bi-arrow-down @(ViewBag.SortColumn == "Role" && ViewBag.SortOrder == "desc" ? "text-primary" : "text-secondary")"></i>
                        </a>
                    </th>

                    <th scope="col" style="border-top: none;">Status</th>
                    <th scope="col" style="border-top: none;">Activity</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>
                            <div class="d-flex">
                                @if (user.Images == null)
                                {
                                    <img src="~/images/Default_pfp.svg.png" alt="" style="height: 30px; width: 30px;">
                                }
                                else
                                {
                                    <img src="~/@user.Images" alt="" style="height: 30px; width: 30px;">
                                }
                                <div class="fw-normal ps-2">@user.Name</div>
                            </div>
                        </td>
                        <td>@user.Email</td>
                        <td>@user.Phone</td>
                        <td>@user.RoleName</td>
                        <td>
                            @if (user.Status ?? false)
                            {
                                <button class="btn rounded-pill" style="padding: 5px; padding-top: 0; background-color: green; color: white; height: 25px; width:
                                                                                88px;">Active</button>
                            }
                            else
                            {
                                <button class="btn rounded-pill" style="padding: 5px; padding-top: 0; background-color: red; color: white; height: 25px; width:
                                                                                88px;">Inactive</button>
                            }
                        </td>
                        <td>
                            <a asp-action="EditUser" asp-controller="UserView" class="edit-icon"
                                asp-route-Email="@user.Email" title="Edit"><i class="fas fa-pencil-alt"></i></a>
                            <a class="delete-icon" title="Delete">
                                <button style="background: transparent; border: none; padding: 0px;" class="ps-3 bin"
                                    data-bs-target="#exampleModalToggle" data-bs-toggle="modal">
                                    <img src="~/images/images-icon/trash3.svg" alt="" class="edit-delete-pic"
                                        data-bs-toggle="modal" data-bs-target="#deleteModal" data-email="@user.Email"
                                        onclick="deleteUser(this)">
                                </button>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @* <div id="userTableContainer">
        @Html.Partial("_UserListPartial", Model)
        </div> *@
    </div>

    @* --------------Delete user modal------------------ *@
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5 fw-semibold" id="deleteModalLabel">Delete Confirmation</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex justify-content-center align-items-center fw-semibold">
                    Are you sure you want to delete this user?
                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <a id="deleteUserBtn" asp-action="DeleteUser" asp-controller="AdminUsers" asp-route-email="">
                        <button type="button" class="btn btn-primary" style="height: 40px; width: 65px;">Yes</button>
                    </a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                        style="height: 40px; width: 65px;">No</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Pagination Section -->
    <nav aria-label="Page navigation example" class="pe-3 pb-2" style="margin-top: 10px;">
        <ul class="pagination justify-content-end">
            <div class="d-flex justify-content-center">
                <li class="d-flex align-items-center pe-3">Items per page</li>
                <li class="d-flex align-items-center pe-3" style="border-radius: 5px; height: 40px;">
                    @* <select name="itemsPerPage" id="itemsPerPage" style="width: 60px; border-radius: 5px;"
                        onchange="changePageSize()">
                        <option selected>@ViewBag.itemsPerPage</option>
                        <option value="1">1</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="15">15</option>
                    </select> *@
                    <select id="itemsPerPage" class="form-select" name="itemsPerPage" id="itemsPerPage" style="width: 60px; border-radius: 5px;" onchange="changePageSize()">
                        <option selected>@ViewBag.itemsPerPage</option>
                        <option value="1">1</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                    </select>
                </li>
            </div>

            <div class="d-flex sec-pagin justify-content-center">
                <li class="d-flex align-items-center pe-3">Showing @((page - 1) * itemsPerPage + 1) -
                    @Math.Min(page * itemsPerPage, totalUsers) of @totalUsers users</li>
                @* <li class="page-item @((page == 1) ? "disabled" : "")">
                    <a class="page-link"
                        href="@Url.Action("Userlist", new { searchTerm, page = page - 1, itemsPerPage })"
                        aria-label="Previous">
                        <i class="fa-solid fa-chevron-left"></i>
                    </a>
                </li> *@
                <li class="page-item @(page == 1 ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="@(page - 1)">
                        <i class="fa-solid fa-chevron-left"></i>
                    </a>
                </li>
                @* <li class="page-item @((page == totalPages) ? "disabled" : "")">
                    <a class="page-link"
                        href="@Url.Action("Userlist", new { searchTerm, page = page + 1, itemsPerPage })"
                        aria-label="Next">
                        <i class="fa-solid fa-chevron-right"></i>
                    </a>
                </li> *@
                <li class="page-item @(page == totalPages ? "disabled" : "")">
                    <a class="page-link" href="#" data-page="@(page + 1)">
                        <i class="fa-solid fa-chevron-right"></i>
                    </a>
                </li>
            </div>
        </ul>
    </nav>

</div>
<script>
    function deleteUser(element) {
        var email = element.getAttribute("data-email");
        var deleteUserBtn = document.getElementById("deleteUserBtn");
        deleteUserBtn.href = '@Url.Action("DeleteUser", "UserView")' + '?email=' + email;
    }
    function changePageSize() {
        var pageSize = document.getElementById("itemsPerPage").value;
        var currentPage = @ViewBag.page;
        window.location.href = '@Url.Action("UserList", "UserView")' + '?page=' + currentPage + '&itemsPerPage=' + pageSize;
    }
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@* <script>
    $(document).ready(function () {
        $("#searchTerm").on("keyup", function () {
            var searchTerm = $(this).val();

            $.ajax({
                url: '@Url.Action("Userlist", "UserView")',
                type: 'GET',
                data: { searchTerm: searchTerm },
                success: function (response) {
                    var htmlContent = $(response).find("#userTable tbody").html();
                    $("#userTable tbody").html(htmlContent);
                },
                error: function () {
                    console.error("Search request failed.");
                }
            });
        });
    });
    $(document).ready(function () {
        // Search user dynamically
        $("#searchTerm").on("keyup", function () {
            loadUsers(1); // Load users from page 1 when searching
        });

        // Change page size dynamically
        $("#itemsPerPage").on("change", function () {
            loadUsers(1); // Reset to page 1 when changing page size
        });

        // Handle pagination clicks dynamically
        $(".pagination").on("click", ".page-link", function (event) {
            event.preventDefault();
            var page = $(this).data("page");
            if (page) {
                loadUsers(page);
            }
        });

        function loadUsers(page) {
            var searchTerm = $("#searchTerm").val();
            var itemsPerPage = $("#itemsPerPage").val();
            var sortColumn = '@ViewBag.SortColumn';
            var sortOrder = '@ViewBag.SortOrder';

            $.ajax({
                url: '@Url.Action("Userlist", "UserView")',
                type: 'GET',
                data: { searchTerm: searchTerm, page: page, itemsPerPage: itemsPerPage, sortColumn: sortColumn, sortOrder: sortOrder },
                success: function (response) {
                    // Replace table body with new content
                    $("#userTable tbody").html($(response).find("#userTable tbody").html());

                    // Update pagination
                    $(".pagination").html($(response).find(".pagination").html());
                },
                error: function () {
                    console.error("Failed to fetch user list.");
                }
            });
        }
    });
</script> *@

<script>
    $(document).ready(function () {
        // Load Users Initially
        loadUsers(@ViewBag.page);

        // Search user dynamically
        $("#searchTerm").on("keyup", function () {
            loadUsers(1);
        });

        // Change page size dynamically without reload
        $("#itemsPerPage").on("change", function () {
            loadUsers(1); // Reset to first page on page size change
        });

        // Handle pagination clicks dynamically
        $(".pagination").on("click", ".page-link", function (event) {
            event.preventDefault();
            var page = $(this).data("page");
            if (page) {
                loadUsers(page);
            }
        });

        // Handle sorting dynamically
        $(".sort-link").on("click", function (event) {
            event.preventDefault();
            var sortColumn = $(this).data("sort");
            var currentSortOrder = $("#sortOrder").val();
            var newSortOrder = (currentSortOrder === "asc") ? "desc" : "asc";

            $("#sortColumn").val(sortColumn);
            $("#sortOrder").val(newSortOrder);
            loadUsers(@ViewBag.page);
        });

        function loadUsers(page) {
            var searchTerm = $("#searchTerm").val();
            var itemsPerPage = $("#itemsPerPage").val();
            var sortColumn = $("#sortColumn").val();
            var sortOrder = $("#sortOrder").val();

            $.ajax({
                url: '@Url.Action("Userlist", "UserView")',
                type: 'GET',
                data: { searchTerm: searchTerm, page: page, itemsPerPage: itemsPerPage, sortColumn: sortColumn, sortOrder: sortOrder },
                success: function (response) {
                    // Replace table body with new content
                    $("#userTable tbody").html($(response).find("#userTable tbody").html());

                    // Update pagination dynamically
                    $(".pagination").html($(response).find(".pagination").html());
                },
                error: function () {
                    console.error("Failed to fetch user list.");
                }
            });
        }
    });
</script>
